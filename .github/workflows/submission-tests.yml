---
name: Submission Tests

on:
    pull_request:
        branches: [main]

concurrency:
    group: ${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
    detect-changes:
        runs-on: ubuntu-latest
        outputs:
            workflows: ${{ steps.filter.outputs.workflows }}
            bootstrap: ${{ steps.filter.outputs.bootstrap }}
            python: ${{ steps.filter.outputs.python }}
            rust: ${{ steps.filter.outputs.rust }}
            website: ${{ steps.filter.outputs.website }}
        steps:
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      # Run Workflow for all suites if the script has changed
                      workflows:
                        - '.github/workflows/submission-tests.yml'
                      bootstrap:
                        - 'Cargo.lock'
                        - 'Cargo.toml'
                        - 'bootstrap/**'
                        - 'dependencies.txt'
                        - 'poetry.lock'
                        - 'pyproject.toml'
                      python:
                        - '**.py'
                      rust:
                        - '**.rs'
                      website:
                        - 'docs/**'

    bootstrap:
        needs: detect-changes
        # TODO: Run on OSX; Currently issues with alsa-lib
        # strategy:
        #     matrix:
        #         os: [ubuntu-latest, macos-latest]
        if: >-
            needs.detect-changes.outputs.bootstrap == 'true' ||
            needs.detect-changes.outputs.workflows == 'true'
        # runs-on: ${{ matrix.os }}
        runs-on: ubuntu-latest
        steps:
            # Checks out repository under $GITHUB_WORKSPACE
            - uses: actions/checkout@v3
              
            - uses: cachix/install-nix-action@v22

            - uses: cachix/cachix-action@v12
              with:
                name: devenv

            - name: Install devenv.sh
              run: nix profile install tarball+https://install.devenv.sh/latest
              shell: sh

            - run: devenv ci

    python:
        needs: detect-changes
        if: >-
            needs.detect-changes.outputs.python == 'true' ||
            needs.detect-changes.outputs.workflows == 'true'
        runs-on: ubuntu-latest
        steps:
            # Checks out repository under $GITHUB_WORKSPACE
            - uses: actions/checkout@v3

            - uses: cachix/install-nix-action@v22

            - uses: cachix/cachix-action@v12
              with:
                name: devenv

            - name: Install devenv.sh
              run: nix profile install tarball+https://install.devenv.sh/latest
              shell: sh
              
            - name: Run unittests
              run: |
                  for test in $(find $GITHUB_WORKSPACE -name "*_test.py" -not -path "**/bootstrap/**" -not -path "**/.venv/**"); do
                    echo "Running tests for $test:"
                    devenv shell cd $(dirname $test) && poetry run python -m unittest $test
                  done

    rust:
        needs: detect-changes

        if: >-
            needs.detect-changes.outputs.rust == 'true' ||
            needs.detect-changes.outputs.workflows == 'true'

        runs-on: ubuntu-latest

        steps:
            # Checks out repository under $GITHUB_WORKSPACE
            - uses: actions/checkout@v3

            - uses: cachix/install-nix-action@v22

            - uses: cachix/cachix-action@v12
              with:
                name: devenv

            - name: Install devenv.sh
              run: nix profile install tarball+https://install.devenv.sh/latest
              shell: sh

            - name: Run Rust core tests
              run: devenv shell cargo test

            - name: Run Rust example tests
              run: devenv shell cargo test --examples

            - name: Run Rust doc tests
              run: devenv shell cargo test --doc

    website:
        needs: detect-changes
        if: >-
            needs.detect-changes.outputs.website == 'true' ||
            needs.detect-changes.outputs.workflows == 'true'
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./docs
        steps:
            - uses: actions/checkout@v2

            - name: Set up Ruby
              uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
              with:
                  working-directory: ./docs
                  ruby-version: '3.1'
                  bundler-cache: true

            - name: Ensure Site builds correctly
              run: |
                  bundle exec jekyll build
                  bundle exec htmlproofer ./_site --disable-external --allow-hash-href
