---
name: Submission Tests

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

concurrency:
    group: ${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
    bootstrap-rust:
        runs-on: ubuntu-latest
        steps:
            # Checks out repository under $GITHUB_WORKSPACE
            - uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: 3.x
                  cache: pip

            - name: Additional Python setup
              run: |
                  pip install -r requirements.txt
                  echo "PYTHONPATH=$PYTHONPATH:~/.dotfiles" >> $GITHUB_ENV

            - name: Check pre-commit cache
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pre-commit
                  key: ${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}

            - name: Bootstrap
              run: python bootstrap/main.py

            - name: Ensure Bootstrap worked
              run: python -m unittest 'bootstrap/main_integration_test.py'

            - name: Check Cargo cache
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Rust core tests
              run: cargo test

            - name: Rust example tests
              run: cargo test --examples

            - name: Rust doc tests
              run: cargo test --doc

    python:
        runs-on: ubuntu-latest
        steps:
            # Checks out repository under $GITHUB_WORKSPACE
            - uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: 3.x
                  cache: pip

            - name: Additional Python setup
              run: |
                  pip install -r requirements.txt
                  echo "PYTHONPATH=$PYTHONPATH:~/.dotfiles" >> $GITHUB_ENV

            - name: Run Python unittests
              run: SKIP_MAIN_INTEGRATION_TEST=1 python -m unittest discover -p '*test.py'
