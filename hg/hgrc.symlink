[ui]
username = Carson Boden <cboden@qumulo.com>
# For your own ignore patterns.
# ignore = ~/.hgignore #uncomment to define your own hgignore file

[pager]
pager = less -FRX
quiet = True

[extensions]
color =
mq =
pager =
purge =
qumulo = ~/tools/hgext/hg_qumulo
record =

[hooks]
# Prevent "hg pull" if MQ patches are applied.
prechangegroup.mq-no-pull = ! hg qtop > /dev/null 2>&1
# Prevent "hg push" if MQ patches are applied.
preoutgoing.mq-no-push = ! hg qtop > /dev/null 2>&1

[diff]
showfunc = True
git = True
unified = 10

# The following sections are nice to have but not required
[alias]
# Can be extended or customized to personal preferences
q = qseries -s -v
qstat = qdiff --stat

[committemplate]
# A slightly more compact commit message template that also
# prints the patch diff. You'll probably want to also install
# the vim syntax file at src/tools/editors/vim/syntax/hgcommit.vim.
# It will apply diff syntax coloring to the commit message template.
changeset = {desc}\n\n
   HG: ------------------------ >8 ------------------------
   HG: Enter commit message. Lines below are removed.
   HG: {extramsg}
   HG: --
   HG: user: {author}\n{ifeq(p2rev, "-1", "",
  "HG: branch merge\n")
  }HG: branch '{branch}'\n{if(activebookmark,
  "HG: bookmark '{activebookmark}'\n")   }{subrepos %
  "HG: subrepo {subrepo}\n"              }{file_adds %
  "HG: added {file}\n"                   }{file_mods %
  "HG: changed {file}\n"                 }{file_dels %
  "HG: removed {file}\n"                 }{if(files, "",
  "HG: no files changed\n")}
   {diff()}

# The following section includes configuration options for our
# own hg_qumulo extension
[qumulo]
# Uncomment to enable three-way-merge behavior during `qpush -m`.
# This version uses kdiff3, but feel free to substitute a
# command that works with your favorite merge tool or editor.
#three-way-merge.cmd = kdiff3 $base $local $other -o $output

# Configure three-way-merge's premerge behavior. Compare to the
# [merge-tools] section's my-merge-tool.premerge parameter.
# 'keep' instructs merge to include hunks that gnu-patch rejects
# in the $output file with seperators. This mode is useful for
# VIM-based (and other) workflows that do not include a built-in
# merge engine.
# 'true' instructs merge to only invoke a merge tool if gnu-patch
# cannot merge successfully.
#three-way-merge.premerge = true

# Uncomment to set the amount of context to use in the {diff()}
# template function (as used in committemplate sample above).
#commit_diff = 3

# Uncomment to override the all-context behavior. Consider
# the tradeoffs before setting this: your merge experience will be
# worse and coworkers that qload your patches may complain.
#unified = 10
