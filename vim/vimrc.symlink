set nocompatible
execute pathogen#infect()

filetype plugin indent on

" Language and Encoding {{{
set encoding=utf-8

let $LANG='en'
set langmenu=en
" }}}

" General Configuration {{{
set showcmd
set laststatus=2
set noshowmode
set autoread

set ruler
set number
set relativenumber
set cursorline

set nowrap

set history=500

set so=8

set wildmenu

set ttimeoutlen=10
" }}}

" Appearance {{{
syntax on
syntax enable

set background=dark
colorscheme gruvbox
" }}}

" Indentation {{{
set tabstop=4
set shiftwidth=4
set softtabstop=4

set expandtab
set smarttab
set autoindent
set smartindent
set shiftround

set backspace=eol,start,indent

set modelines=1
" }}}

" Folding {{{
set foldmethod=indent
set foldnestmax=10
set foldenable
set foldlevelstart=10
" }}}

" Noises and Notifications {{{
set noerrorbells
set novisualbell
" }}}

" Searching {{{
set ignorecase
set smartcase

set showmatch
set hlsearch
set incsearch
" }}}

" Windows and Tabs {{{
set hidden
set splitbelow
set splitright
" }}}

" Keybindings {{{
let mapleader = " "
let maplocalleader = " "

nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

nnoremap j gj
nnoremap k gk

nmap <silent> // :nohlsearch<CR>

noremap <leader>m : silent make\|redraw!\|cw<CR>

command! Bd bp | sp | bn | bd

inoremap <S-Tab> <C-V><Tab>
" }}}

" Airline {{{
let g:airline_powerline_fonts=1
let g:airline_inactive_collapse=1
let g:airline_theme="gruvbox"
" }}}

" NERD Tree {{{
let NerdTreeMinimalUI = 1
let NERDTreeIgnore = ['\.pyc$', '\.o$', '\.pdf$']
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeDirArrows = 1

autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

map <C-n> : NERDTreeToggle<CR>
map <Leader>nf : NERDTreeFind<CR>
" }}}

" NERD Commenter {{{
let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
let g:NERDDefaultAlign = 'left'
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1
" }}}

" YouCompleteMe {{{
let g:ycm_add_preview_to_completeopt = 0
let g:ycm_show_diagnostics_ui = 0
let g:ycm_autoclose_preview_window_after_insertion = 1
" }}}

" C++ Enhanced Highlight {{{
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
" }}}

" vim:foldmethod=marker:foldlevel=0
